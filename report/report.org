#+TITLE:
#+AUTHOR: Bartolomeus Jankowski, Attila Nagy, David Spångberg
#+DATE:
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+LATEX_HEADER: \usepackage{fullpage,xcolor,listings, algpseudocode, algorithm}
#+LATEX_HEADER: \usepackage[style=alphabetic,citestyle=alphabetic]{biblatex}
#+LATEX_HEADER: \addbibresource{references.bib}

#+LATEX_HEADER: \usepackage{tikz}
#+LATEX_HEADER: \usetikzlibrary{calc,3d}

# #### Palatino font
#+LATEX_HEADER: \usepackage[sc]{mathpazo}
#+LATEX_HEADER: \usepackage[T1]{fontenc}
#+LATEX_HEADER: \linespread{1.05} % Palatino needs more leading (space between lines)

#+BEGIN_LATEX

\setlength{\parskip}{0.2cm}
\setlength{\parindent}{0pt}
\newcommand{\note}[1]{{\color{blue} Note: \emph{#1}}}
\newcommand{\todo}[1]{{\color{red} TODO: \emph{#1}}}

\definecolor{lightgrey}{gray}{0.9}
\lstset
{
keywordstyle=\textbf,
numbers=left,
numberstyle=\scriptsize,
frame=l,
numbersep=7pt,
xleftmargin=10pt
}

\lstloadlanguages{Haskell}
\lstnewenvironment{haskell}
    {\lstset{}%
      \csname lst@SetFirstLabel\endcsname}
    {\csname lst@SaveFirstLabel\endcsname}
    \lstset{
      basicstyle=\small\ttfamily,
      flexiblecolumns=false,
      basewidth={0.5em,0.45em},
      literate={+}{{$+$}}1 {/}{{$/$}}1 {*}{{$*$}}1 {=}{{$=$}}1
               {>}{{$>$}}1 {<}{{$<$}}1 {\\}{{$\lambda$}}1
               {\\\\}{{\char`\\\char`\\}}1
               {->}{{$\rightarrow$}}2 {>=}{{$\geq$}}2 {<-}{{$\leftarrow$}}2
               {<=}{{$\leq$}}2 {=>}{{$\Rightarrow$}}2
               {\ .}{{$\circ$}}2 {\ .\ }{{$\circ$}}2
               {>>}{{>>}}2 {>>=}{{>>=}}2
               {|}{{$\mid$}}1
    }
#+END_LATEX

\thispagestyle{empty}

\begin{centering}
\includegraphics[width=11cm]{gu.eps} \\
\vspace{1cm}
\includegraphics[width=5cm]{chalmers.eps}
\vspace{5cm}

\huge
Controlling a Shrdlite robot \\ using Haskell
\\\Large \vspace{0.5cm} Group 14

\vspace{0.5cm}
\normalsize
\end{centering}

# The hspace is a hack to align the table a little more to the right.
# I.e. to move the vertical bar closer to the middle of the page.
| /               |                   <r> |                                   |
| /               |                     > |                                   |
| \hspace{0.25cm} | Bartolomeus Jankowski | \texttt{<brtk666@gmail.com>}      |
|                 |           Attila Nagy | \texttt{<attilanagy85@gmail.com>} |
|                 |       David Spångberg | \texttt{<david@tunna.org>}        |
\newpage

\pagenumbering{roman}

#+BEGIN_LATEX
$~$
\vspace{4.3cm}

\section*{Abstract BARTEK}
\smallskip
   \todo{\textbf{SOME RULES:  While editing a section please put your name somewhere
   visible and commit, when finished remove your name!}}



\noindent \textbf{Keywords:}


\addcontentsline{toc}{section}{Abstract}
#+END_LATEX

\newpage
[TABLE-OF-CONTENTS]
\newpage

\pagenumbering{arabic}

* Introduction and Background
  This section gives an overview about the problem itself and describes the
  algorithms, theorems and tools that were used during this project.
  Furthermore, this section presents several alternative solutions for the
  given problem, that were not used in the final solution, but took part in
  the development process.

** Problem description
   \todo{TODO Describe Block-World, translate grammar -> repr. solvable by some solver }

   The problem consists of the implementation of planner for a robot arm in a
   two-dimensional Shrdlite virtual
   world. This robot arm can only pick up or drop an element at the same time.
   The planner's task is to determine a sequence of the pick-up and drop
   commands that leaves the virtual world in the required state defined by
   the user.

   The block elements have several properties, such us: form, color, size,
   width and height. Depending on these properties, several rules exist
   that exclude certain combinations of stacked objects. For instance, a
   block cannot be placed on another block if it is greater than the other
   block, or nothing can be placed on a ball or pyramid. Besides blocks, there
   is a floor in the world which cannot be moved and nothing can be below it.

   The elements and their positions in the initial world state are chosen
   arbitrarily and hard-coded in the system. This initial state can be set to
   any preferable state.

   A command given by the user is first parsed by a grammar interpreter,
   called GF. Then, before feeding the result to the planner, it must be
   converted to a form that is compatible with the planner. In our case it
   is written in Planning Domain Definition Language. Finally, the planner
   gives back a list of pick and drop commands that provide the transition
   between the current and goal state.
** Related work Bartek
   \todo{TODO Describe some other planners, list some papers, mention FF, hanoi problem}
** Available tools Bartek
   \todo{TODO FOL-theorem proovers, STRIPS, PDDL, GF}

* Overview of the architecture
   This section describes the parts of the project that has been finished,
   currently under development, or just an idea waiting to be implemented.
   Section~\ref{sec:finished} shows a detailed view about the current design
   including the structure of the domain and problem file written in STRIPS,
   the code level representation of the world, the goal creation process and
   the interpretation of the parsed grammar tree. Section~\ref{sec:progress}
   mainly contains the user commands that do not work as expected and,
   therefore, these cases are still under investigation. Finally, section
   \ref{sec:future} mentions some of the possibilities for further development.

** Finished work
   \label{sec:finished}
   \todo{TODO Predicates and Actins in STRIPS, World descr. and represenatation,
              goal creation from fromgrammar tree/output }

** Work in progress
   \label{sec:progress}
   Here, some parts that are still under development are touched upon.
   \todo{TODO describe actions that do not work/work not as expected}

*** Bug corrections
   \todo{TODO}

** Future work
   \todo{TODO E-proover, FOL, FOL->PDDL/STRIPS}
   This section mentions some of the many viable additions for the
   library which might further increase its usability.

* Results and Evaluation
   \todo{TODO problem: "Besides Problem" two reds, blah blah...}

* Discussion and Conclusions
   \todo{TODO Sum up your project, suggest future extensions and improvements.}

\printbibliography

\appendix

\addcontentsline{toc}{section}{Appendix}

* Individual stories
** Attila Nagy
   Code:
   - move command

   Report:
   - Problem Description section,

** David Spångberg

** Bartolomeus Jankowski
* Other
   \note{Here you include all other information and documentation that
   did not fit into the report in the above sections but that you
   consider too important to leave out.}

* Footnotes
