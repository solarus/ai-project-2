(define (domain shrdlu)
  (:requirements :strips)

  (:predicates (clear ?x)
               (on ?x ?y)
               (in ?x ?y)
               (in-any ?x)
               (box ?x)
               (smaller ?x ?y))

  (:action move-in-in
   :parameters (?obj ?from ?from-in ?to ?to-in)
   :precondition (and (in-any ?obj)
                      (box ?from-in)
                      (box ?to-in)
                      (in ?obj ?from-in)
                      (in ?to ?to-in)
                      (smaller ?obj ?to)
                      (on ?obj ?from)
                      (clear ?obj)
                      (clear ?to))
   :effect (and (clear ?from)
                (not (clear ?to))
                (on ?obj ?to)
                (not (on ?obj ?from))
                (in ?obj ?to-in)
                (not (in ?obj ?from-in))))

  (:action move-in-on
   :parameters (?obj ?from ?from-in ?to)
   :precondition (and (in-any ?obj)
                      (box ?from-in)
                      (not (in-any ?to))
                      (smaller ?obj ?to)
                      (on ?obj ?from)
                      (clear ?obj)
                      (clear ?to))
   :effect (and (clear ?from)
                (not (clear ?to))
                (on ?obj ?to)
                (not (on ?obj ?from))
                (not (in-any ?obj))
                (not (in ?obj ?from-in))))

  (:action move-on-in
   :parameters (?obj ?from ?to ?to-in)
   :precondition (and (not (in-any ?obj))
                      (box ?to-in)
                      (in ?to ?to-in)
                      (smaller ?obj ?to)
                      (on ?obj ?from)
                      (clear ?obj)
                      (clear ?to))
   :effect (and (clear ?from)
                (not (clear ?to))
                (on ?obj ?to)
                (not (on ?obj ?from))
                (in ?obj ?to-in)
                (in-any ?obj)))

  (:action move-on-on
   :parameters (?obj ?from ?to)
   :precondition (and (not (in-any ?from))
                      (not (in-any ?to))
                      (smaller ?obj ?to)
                      (on ?obj ?from)
                      (clear ?obj)
                      (clear ?to))
   :effect (and (clear ?from)
                (not (clear ?to))
                (on ?obj ?to)
                (not (on ?obj ?from))))
)
